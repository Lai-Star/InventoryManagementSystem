# Common Folder Names

- src:
  - This folder is typically used to store the source code files for a project. The name "src" is short for "source".
- lib or libs:
  - This folder is typically used to store libraries that are used by the project. A library is a collection of pre-written code that provides commonly used functions and features.
- bin:
  - This folder is typically used to store compiled executables or binaries. The name "bin" is short for "binary".
- include or includes:
  - This folder is typically used to store header files that provide declarations for functions and types that are used by the project. In C and C++, a header file is a file that provides declarations for functions and types, but does not contain their implementations.
- test:
  - This folder is typically used to store test files for a project. Test files are used to define and run tests that ensure that the project's code is working correctly.
- docs or documentation:
  - This folder is typically used to store documentation files for a project. Documentation files provide detailed information about the project, its features, and how to use them.
- config or configuration:

  - This folder is typically used to store configuration files for a project. Configuration files contain settings and parameters that control the behavior of the project.

  api: This folder is typically used to store the code that defines the endpoints and routes of the project's API. The API is the interface through which clients (such as web or mobile apps) can access the project's data and functionality.
  models: This folder is typically used to store the code that defines the data models used by the project. A data model is a representation of the data and relationships in a database, and is used to create and manage the database schema.
  controllers: This folder is typically used to store the code that defines the controllers for the project. A controller is a function or method that handles requests to the project's API, and is responsible for performing the required actions and returning a response.
  services: This folder is typically used to store the code that defines the services used by the project. A service is a self-contained piece of functionality that can be accessed and used by other parts of the project. Services may include things like email sending, image processing, or data processing.
  utils or helpers: This folder is typically used to store utility or helper functions that are used by multiple parts of the project. Utility or helper functions are small, generic functions that provide commonly used functionality, such as string manipulation or date formatting.

go mod and go sum are two tools that are used to manage dependencies in a Go project. go mod is used to manage the dependencies of a project, and go sum is used to verify the integrity of the dependencies.
